service cloud.firestore {
    match /databases/{database}/documents {
        
        // Each user has one profile: 1 to 1
        match /users/{userId} {

            // is the user logged in: every logged in user can read other users
            allow read: if request.auth.uid != null;

            // if the logged in is same as existing user allow write
            allow write: if request.auth.uid == userId;

        }

        // Each user can have many todo list: 1 to many
        match /todos/{docId} {

            // other users can see your doc only if you publish it (draft, pending)
            allow read: if resource.data.status == 'published';

            // only allows who owns the doc but docId != userId. So, we compare the incoming uid with the uid attached to the resource
            allow create: if request.auth.uid == resource.data.uid
                          && request.time == request.resource.data.createdAt;
                          // this is checking the time of request is not of past or future by comparing with firebases inbuilt timestamp

            // we allow only specific fields like text & status to be updated, any other request like update createdAt time will be rejected
            allow update: if request.auth.uid == resource.data.uid
                          && request.resource.data.keys().hasOnly(['text', 'status']);
                          // data is an object or map can be converted to list using keys()
                          // to check whats inside the request data hasOnly is used to authorize specific fields      

        }

    }
}